# 垂直分库 == 指定不同的表分布在不同的库
# 指定数据源的名称
spring.shardingsphere.datasource.names=ds0,ds1

# 配置第一个数据源的参数
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://node01:3306/sharding_sphere0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=abc123
# 配置第二个数据源的参数
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://node02:3306/sharding_sphere1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=abc123

# 表 bus_order
spring.shardingsphere.sharding.tables.bus_order.actual-data-nodes=ds0.bus_order
spring.shardingsphere.sharding.tables.bus_order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.bus_order.table-strategy.inline.algorithm-expression=bus_order
#spring.shardingsphere.sharding.tables.bus_order.table-strategy.inline.algorithm-expression=ds0.bus_order$->{id % 2}
spring.shardingsphere.sharding.tables.bus_order.key-generator.column=id
spring.shardingsphere.sharding.tables.bus_order.key-generator.type=SNOWFLAKE
# 表 bus_customer
spring.shardingsphere.sharding.tables.bus_customer.actual-data-nodes=ds1.bus_customer
spring.shardingsphere.sharding.tables.bus_customer.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.bus_customer.table-strategy.inline.algorithm-expression=bus_customer
#spring.shardingsphere.sharding.tables.bus_customer.table-strategy.inline.algorithm-expression=ds0.bus_customer->{id % 2}
spring.shardingsphere.sharding.tables.bus_customer.key-generator.column=id
spring.shardingsphere.sharding.tables.bus_customer.key-generator.type=SNOWFLAKE

spring.shardingsphere.props.sql.show=true
