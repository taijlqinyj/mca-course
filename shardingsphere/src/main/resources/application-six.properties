# 雪花算法生成全局序列ID
# 指定数据源的名称
spring.shardingsphere.datasource.names=ds0,ds1
# 配置第一个数据源的参数
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://node01:3306/sharding_sphere0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=abc123
# 配置第二个数据源的参数
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://node02:3306/sharding_sphere1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=abc123

# dict_order_type 字典表
spring.shardingsphere.sharding.broadcast-tables=dict_order_type
spring.shardingsphere.sharding.tables.dict_order_type.key-generator.column=id
spring.shardingsphere.sharding.tables.dict_order_type.key-generator.type=SNOWFLAKE
# 雪花算法生成全局序列ID失效原因：
# 1.mapper层错误，不能加上主键列 2.表主键设计成自增得了，分布式ID不能为自增？是否正确，待确认
# 3.ID的类型不对 导致ID存储不上例如 雪花算法 生成long类型的ID 为18位 你用 int 类型存 肯定存不上的
# 4.自定义生成算法 出错 或者spi机制查找不到，未设置算法必须参数
# worker.id 和 max.vibration.offset 不配置默认为0
spring.shardingsphere.sharding.tables.dict_order_type.key-generator.props.worker.id=123
spring.shardingsphere.sharding.tables.dict_order_type.key-generator.props.max.vibration.offset=2

spring.shardingsphere.props.sql.show=true
